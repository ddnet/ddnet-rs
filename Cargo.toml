[package]
name = "ddnet-rs"
description = "DDraceNetwork, a free cooperative platformer game"
version = "0.1.0"
edition = "2024"
publish = false

#[profile.release]
#lto = true
#opt-level = 3
#codegen-units = 1
#debug = true
#strip = true
#panic = "abort"

[package.metadata.cargo-machete]
ignored = ["tracing", "audiopus_sys"]

[package.metadata.bundle]
short_description = "DDraceNetwork, a free cooperative platformer game"
long_description = """
DDraceNetwork (DDNet) is an actively maintained version of DDRace, a Teeworlds modification with a unique cooperative gameplay.
Help each other play through custom maps, compete against the best in international tournaments, design your own maps, or run your own server.
The official servers are around the world.
All ranks made on official servers are available worldwide and you can collect points!
"""
[workspace]
members = [
  "examples/lib-modules/editor-lib",
  "examples/wasm-modules/actionfeed",
  "examples/wasm-modules/auto-mapper",
  "examples/wasm-modules/chat",
  "examples/wasm-modules/connecting",
  "examples/wasm-modules/console",
  "examples/wasm-modules/demo_player",
  "examples/wasm-modules/editor_wasm",
  "examples/wasm-modules/emote_wheel",
  "examples/wasm-modules/graphics-mod",
  "examples/wasm-modules/hud",
  "examples/wasm-modules/ingame_menu",
  "examples/wasm-modules/mainmenu",
  "examples/wasm-modules/motd",
  "examples/wasm-modules/prediction_timer_ui",
  "examples/wasm-modules/render-game",
  "examples/wasm-modules/scoreboard",
  "examples/wasm-modules/state",
  "examples/wasm-modules/ui",
  "examples/wasm-modules/vote",
  "game/api-auto-mapper",
  "game/api-editor",
  "game/api-render-game",
  "game/api-state",
  "game/api-ui-game",
  "game/assets-base",
  "game/assets-splitting",
  "game/binds",
  "game/camera",
  "game/client-accounts",
  "game/client-console",
  "game/client-containers",
  "game/client-demo",
  "game/client-ghost",
  "game/client-map",
  "game/client-notifications",
  "game/client-render",
  "game/client-render-base",
  "game/client-render-game",
  "game/client-replay",
  "game/client-types",
  "game/client-ui",
  "game/community",
  "game/demo",
  "game/ddnet-info-proxy",
  "game/editor",
  "game/editor-auto-mapper-wasm",
  "game/editor-interface",
  "game/editor-wasm",
  "game/egui-timeline",
  "game/game-base",
  "game/game-config",
  "game/game-config-fs",
  "game/game-interface",
  "game/game-network",
  "game/game-server",
  "game/game-state-wasm",
  "game/ghost",
  "game/http-accounts",
  "game/legacy-map",
  "game/legacy-proxy",
  "game/map",
  "game/map-convert-lib",
  "game/master-server-types",
  "game/prediction-timer",
  "game/render-game-wasm",
  "game/vanilla",
  "lib/api",
  "lib/api-macros",
  "lib/api-ui",
  "lib/api-wasm-macros",
  "lib/auto-updater",
  "lib/av-encoder",
  "lib/base",
  "lib/base-fs",
  "lib/base-http",
  "lib/base-io",
  "lib/base-io-traits",
  "lib/bin-patch",
  "lib/cache",
  "lib/command-parser",
  "lib/config",
  "lib/config-fs",
  "lib/config-macro",
  "lib/game-database",
  "lib/game-database-backend",
  "lib/game-database-macros",
  "lib/graphics",
  "lib/graphics-backend",
  "lib/graphics-backend-traits",
  "lib/graphics-base-traits",
  "lib/graphics-types",
  "lib/hiarc",
  "lib/hiarc-macro",
  "lib/image-utils",
  "lib/input-binds",
  "lib/microphone",
  "lib/native",
  "lib/native-display",
  "lib/network",
  "lib/pool",
  "lib/sound",
  "lib/sound-backend",
  "lib/sql",
  "lib/steam",
  "lib/ui-base",
  "lib/ui-generic",
  "lib/ui-wasm-manager",
  "lib/wasm-logic-db",
  "lib/wasm-logic-fs",
  "lib/wasm-logic-graphics",
  "lib/wasm-logic-http",
  "lib/wasm-logic-sound",
  "lib/wasm-runtime",
  "lib/wasm-runtime-types",
  "src/assets-server",
  "src/community-register-server",
  "src/community-server",
  "src/dilate",
  "src/editor-server",
  "src/emoticon-convert",
  "src/extra-convert",
  "src/game-convert",
  "src/hud-convert",
  "src/map-convert",
  "src/master-server",
  "src/part-convert",
  "src/server",
  "src/skin-convert",
]

# :/ https://github.com/rust-mobile/xbuild/issues/161
[lib]
crate-type = ["cdylib"]
path = "src/lib.rs"

[[bin]]
name = "ddnet-rs"
path = "src/lib.rs"

[features]
bundled_data_dir = ["base-fs/bundled_data_dir"]
enable_steam = ["steam/runtime"]
microphone = ["microphone/cpal_opus"]
ffmpeg = ["client-demo/ffmpeg"]

alloc_track = ["dep:alloc-track"]
alloc_stats = ["dep:stats_alloc"]
auto_updater = ["dep:auto-updater"]

bench_slow_paths = [
  "tracing/max_level_trace",
  "tracing/release_max_level_trace",
]

default = ["tracing/max_level_info", "tracing/release_max_level_info"]

[dependencies]
base = { path = "lib/base" }
base-fs = { path = "lib/base-fs" }
base-http = { path = "lib/base-http" }
base-io = { path = "lib/base-io" }
bin-patch = { path = "lib/bin-patch" }
command-parser = { path = "lib/command-parser" }
config = { path = "lib/config" }
config-fs = { path = "lib/config-fs" }
graphics = { path = "lib/graphics" }
graphics-backend = { path = "lib/graphics-backend" }
graphics-types = { path = "lib/graphics-types" }
image-utils = { path = "lib/image-utils" }
input-binds = { path = "lib/input-binds" }
math = { path = "lib/math" }
microphone = { path = "lib/microphone" }
native = { path = "lib/native" }
network = { path = "lib/network" }
pool = { path = "lib/pool" }
sound = { path = "lib/sound" }
sound-backend = { path = "lib/sound-backend" }
steam = { path = "lib/steam" }
ui-base = { path = "lib/ui-base" }
ui-generic = { path = "lib/ui-generic" }
ui-wasm-manager = { path = "lib/ui-wasm-manager" }

auto-updater = { path = "lib/auto-updater", optional = true }

binds = { path = "game/binds" }
camera = { path = "game/camera" }
client-accounts = { path = "game/client-accounts" }
client-console = { path = "game/client-console" }
client-containers = { path = "game/client-containers" }
client-demo = { path = "game/client-demo" }
client-ghost = { path = "game/client-ghost" }
client-map = { path = "game/client-map" }
client-notifications = { path = "game/client-notifications" }
client-render-base = { path = "game/client-render-base" }
client-render-game = { path = "game/client-render-game" }
client-replay = { path = "game/client-replay" }
client-types = { path = "game/client-types" }
client-ui = { path = "game/client-ui", features = ["binds"] }
demo = { path = "game/demo", features = ["recorder"] }
ddnet-info-proxy = { path = "game/ddnet-info-proxy" }
editor = { path = "game/editor", default-features = false }
editor-wasm = { path = "game/editor-wasm", default-features = false }
game-base = { path = "game/game-base" }
game-config = { path = "game/game-config" }
game-config-fs = { path = "game/game-config-fs" }
game-interface = { path = "game/game-interface" }
game-network = { path = "game/game-network" }
game-server = { path = "game/game-server", default-features = false }
game-state-wasm = { path = "game/game-state-wasm" }
ghost = { path = "game/ghost" }
legacy-proxy = { path = "game/legacy-proxy" }
prediction-timer = { path = "game/prediction-timer" }

anyhow = { version = "1.0.100", features = ["backtrace"] }
arrayvec = "0.7.6"
bincode = { version = "2.0.1", features = ["serde"] }
bytes = "1.10.1"
chrono = { version = "0.4.42", features = ["serde"] }
crossbeam = "0.8.4"
egui = { version = "0.32.3", default-features = false, features = ["serde"] }
egui-winit = { version = "0.32.3", default-features = false, features = [
  "x11",
  "arboard",
  "links",
] }
egui_extras = { version = "0.32.3" }
emath = "0.32.3"
env_logger = "0.11.8"
fixed = "1.29.0"
hashlink = { git = "https://github.com/Jupeyy/hashlink/", branch = "ddnet", features = [
  "serde",
  "serde_impl",
] }
hiarc = { path = "lib/hiarc", features = ["derive"] }
log = "0.4.28"
num = "0.4.3"
parking_lot = "0.12.5"
rand = { version = "0.9.2", features = ["std_rng"], default-features = false }
rayon = "1.11.0"
serde = "1.0.228"
serde-value = "0.7.0"
serde_json = "1.0.145"
thread-priority = "3.0.0"
tokio = { version = "1.48.0", features = [
  "rt-multi-thread",
  "sync",
  "fs",
  "time",
  "macros",
] }
tracing = { version = "0.1.41", default-features = false, features = [
  "attributes",
] }
trybuild = "1.0"
url = "2.5.7"
x509-cert = { version = "0.2.5" }

audiopus_sys = { git = "https://github.com/Jupeyy/audiopus_sys.git", branch = "ddnet-rs", features = [
  "static",
] }

alloc-track = { version = "0.3.1", optional = true }
stats_alloc = { version = "0.1.10", optional = true }

[target.'cfg(not(target_os = "android"))'.dependencies]
native-dialog = "0.9.2"

[target.'cfg(target_os = "android")'.dependencies]
android_logger = "0.15.1"
ndk = { version = "0.9.0", default-features = false }

[target.'cfg(target_arch = "wasm32")'.dependencies]
tracing = { version = "0.1.41", default-features = false, features = [
  "max_level_off",
  "release_max_level_off",
] }

[dev-dependencies]
client-render = { path = "game/client-render" }
client-render-game = { path = "game/client-render-game" }
map = { path = "game/map" }
vanilla = { path = "game/vanilla" }

graphics-backend-traits = { path = "lib/graphics-backend-traits" }
graphics-base-traits = { path = "lib/graphics-base-traits" }

# Better patches are always welcome
#[target.'cfg(target_os = "windows")'.patch.crates-io]
[patch.crates-io]
ffmpeg-sys-next = { git = "https://github.com/Jupeyy/rust-ffmpeg-sys.git", branch = "pr_mingw_workaround" }
audiopus_sys = { git = "https://github.com/Jupeyy/audiopus_sys.git", branch = "ddnet-rs" }

# super slow in debug
[profile.dev.package.blake3]
opt-level = 3
[profile.dev.package.tract-core]
opt-level = 3
